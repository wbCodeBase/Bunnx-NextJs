
 Phase 1: Static Website Development (using Next.js)
1. Day 2 - Project Setup & Initial Configuration
   - Next.js Setup: Initialize the Next.js project and install required dependencies (e.g., CSS frameworks like Tailwind CSS or styled-components).
   - Folder Structure: Set up a solid project structure (`pages`, `components`, `styles`).
   - Git Repository & Version Control: Create a repository to track changes and manage versions.

2. day 2-3 - Static Header & Footer
   - Static Header: Develop a header with navigation links to key pages (e.g., Home, Services, About Us, Contact Us).
   - Static Footer: Create a footer with company details, quick links, and placeholders for additional information (e.g., social media icons).

3. day 2-4 - Home Page Development
   - UI/UX Design: create the layout directly within Next.js, or create wireframes as a reference.
   - Content Sections: Include static sections such as hero banner, services overview, testimonials, and a call-to-action.
   - Responsiveness: Ensure the homepage is fully responsive across different devices.

4. day 2-4 - Service Page or Technology Expertise Page Template
   - Static Service Page: Design and develop a static page showcasing the services your agency offers. Use sections for each service with brief descriptions.
   - Technology Expertise: Create a page to highlight the technologies your agency uses, showing each technology as a static component.
   - Consistency: Maintain a consistent look and feel across the website.

5. day 3-4 - About Us, Contact Us, and Privacy Policy
   - About Us Page: Develop a static page with details about the agency, its vision, mission, and team.
   - Contact Us Page: Include a basic static form that can be set up to send inquiries via email. Configure form submissions using a simple backend service like nodemailer or a third-party service (e.g., Formspree).
   - Privacy Policy & Terms of Use: Create static pages for legal documentation.

6. day 1-2 - Testing & Deployment
   - Cross-browser Testing: Ensure compatibility across major browsers and devices.
   - SEO Best Practices: Optimize static pages for search engines using Next.js features (`<Head>` component for metadata).
   - Deployment: Deploy the static website to a platform like Vercel or Netlify for easy hosting and content delivery.


Total Days - 18 to 22 











